package sort;

import doghouse.StdRandom;

public class Selection extends Sort{

	public static void sort(Comparable[] a, boolean desc) {
		int N = a.length;
		if (desc) {
			for (int i = 0; i < N - 1; i++) {
				int max = i;
				for (int j = i + 1; j < N; j++)
					if (less(a[max], a[j])) max = j;
				exch(a, i, max);
			}
		} else {
			for (int i = 0; i < N - 1; i++) {
				int min = i;
				for (int j = i + 1; j < N; j++)
					if (less(a[j], a[min])) min = j;
				exch(a, i, min);
			}
		}
	}
	public static void sort(Comparable[] a) {
		sort(a, false);
	}
	public static void sort(int[] a, boolean desc) {
		int N = a.length;
		if (desc) {
			for (int i = 0; i < N - 1; i++) {
				int max = i;
				for (int j = i + 1; j < N; j++)
					if (a[j] > a[max]) max = j;
				exch(a, i, max);
			}
		} else {
			for (int i = 0; i < N - 1; i++) {
				int min = i;
				for (int j = i + 1; j < N; j++)
					if (a[j] < a[min]) min = j;
				exch(a, i, min);
			}
		}
	}
	public static void sort(int[] a) {
		sort(a, false);
	}
	public static void sort(double[] a, boolean desc) {
		int N = a.length;
		if (desc) {
			for (int i = 0; i < N - 1; i++) {
				int max = i;
				for (int j = i + 1; j < N; j++)
					if (a[j] > a[max]) max = j;
				exch(a, i, max);
			}
		} else {
			for (int i = 0; i < N - 1; i++) {
				int min = i;
				for (int j = i + 1; j < N; j++)
					if (a[j] < a[min]) min = j;
				exch(a, i, min);
			}
		}
	}
	public static void sort(double[] a) {
		sort(a, false);
	}
	
	public static void main(String[] args) {
		double avg = 0; 
		for (int i = 0; i < 10; i++) {
			int[] testArray = StdRandom.getIntegerArray(100000);
			long begintime = System.currentTimeMillis();
			Selection.sort(testArray);
			long endtime=System.currentTimeMillis();
			long costTime = endtime - begintime;
			System.out.println("test" + i + ":" + costTime + "ms");
			System.out.println("sort success:" + Selection.isSorted(testArray));
			avg += costTime;
			testArray = null;
		}
		System.out.println("avg:" + avg/10 + "ms");
	}
}
